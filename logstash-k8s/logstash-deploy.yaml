---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-index-conf
  namespace: logging
data:
  logstash-index.conf: |
    input{
        kafka {
            bootstrap_servers => "172.16.16.8:8000,172.16.16.16:8002,172.16.16.19:8004"
            group_id => "logstash-0428-003"
            topics => ["kvision-log"]
            consumer_threads => 5
            auto_offset_reset => "latest"
        }
    }
    filter {
        json {
            source => "message"
        }
        if [source] == "/data/logs/nginx/access.log" {
            mutate {
                add_field => {
                    "type" => "nginx-log-server"
                }
            }
        } else if [source] == "/data/logs/nginx/error.log" {
            mutate {
                add_field => {
                    "type" => "nginx-log-error"
                }
            }
        } else {
            grok {
                match => { "source" => "/data/logs(/[\w\d_-]+)*/%{DATA:type}\..*log" }
                overwrite => [ "type" ]
            }
        }
        if [type] == "nginx-log-error" {
            date {
                match => [ "timestamp" , "yyyy/MM/dd HH:mm:ss" ]
            }
        } else if [type] == "kvision-live-log" or [type] == "data-worker-log" {
            grok {
                match => [ "message" , "%{COMBINEDAPACHELOG} %{QS:x_forwarded_for}",
                "message" , "(?<timestamp>[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{0,3})"
                ]
            }
            date {
                match => [ "timestamp" , "YYYY-MM-dd HH:mm:ss.SSS" ]
            }
        } else {
            # json 格式日志
            if [type] == "nginx-log-server" {
                json {
                    source => "message"
                    remove_field => "message"
                }
                date {
                    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
                    target => "@timestamp"
                    timezone => "Etc/GMT-8"
                }
                mutate {
                    convert => {
                        "status" => "integer"
                        "body_bytes_sent" => "integer"
                        "request_time" => "float"
                        "upstream_response_time" => "float"
                    }
                }
            } else {
                json {
                    source => "message"
                    remove_field => "json_message"
                }
                json {
                    source => "message"
                }
                if [source] == "/var/tmp/kvision-logs/suppervisor_kvision-webapi.log" {
                    drop { }
                }
                date {
                    match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
                    target => "@timestamp"
                    timezone => "Etc/GMT-8"
                }
            }
        }

    }
    output {
        elasticsearch {
            hosts => ["172.16.16.25:9200","172.16.16.12:9200","172.16.16.69:9200"]
            index => "logstash-%{type}-%{+YYYY.MM.dd}"
            template_overwrite => true
            user => "elastic"
            password => "123456"
        }
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: logstash
  namespace: logging
spec:
  selector:
    matchLabels:
      app: logstash
  replicas: 3
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: harbor.qyvideo.net/duanyifei-test/logstash:6.1.1_v0.4
        imagePullPolicy: Always
        command:
        - "/usr/share/logstash/bin/logstash"
        - "-f /usr/share/logstash/custome-config/logstash-index.conf"
        - "--config.reload.automatic"
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "2Gi"
        env:
          - name: PIPELINE_WORKERS
            value: "2"
          - name: XPACK_MONITORING_ENABLED
            value: "false"
        volumeMounts:
        - mountPath: "/usr/share/logstash/custome-config"
          name: logstash-index-conf
      volumes:
        - name: logstash-index-conf
          configMap:
            name: logstash-index-conf

