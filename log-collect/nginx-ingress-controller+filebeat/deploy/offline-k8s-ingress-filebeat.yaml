---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
data:
  log-format-upstream: '{ "remote_addr":  "$remote_addr", "remote_user": "$remote_user", "timestamp": "$time_local", "request": "$request", "status": $status, "body_bytes_sent": $body_bytes_sent, "http_referer": "$http_referer", "http_user_agent": "$http_user_agent", "http_x_forwarded_for": "$http_x_forwarded_for", "request_time": $request_time, "remote_host": "$host", "upstream_response_time": $upstream_response_time, "upstream_addr": "$upstream_addr", "uri": "$uri", "request_id": "$request_id" }'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      hostAliases:
      - hostnames:
        - "vm172-16-16-8.ksc.com"
        ip: "172.16.16.8"
      - hostnames:
        - "vm172-16-16-16.ksc.com"
        ip: "172.16.16.16"
      - hostnames:
        - "vm172-16-16-19.ksc.com"
        ip: "172.16.16.19"
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: nginx-ingress-serviceaccount
      nodeSelector:
        ingress: nginx
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - ingress-nginx
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: nginx-ingress-controller
          image: harbor.qyvideo.net/duanyifei-test/nginx-ingress-controller:0.23.0
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --report-node-internal-ip-address
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          volumeMounts:
            - name: shared-log
              mountPath: /var/log/nginx/
        - name: nginx-ingress-filebeat
          image: harbor.qyvideo.net/duanyifei-test/filebeat:6.1.1_v1
          securityContext:
            runAsUser: 0
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: config
            mountPath: /usr/share/filebeat/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
          - name: shared-log
            mountPath: /data/logs/nginx/
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: ingress-filebeat-config
      - name: shared-log
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-filebeat-config
  namespace: ingress-nginx
  labels:
    name: ingress-filebeat-config
data:
  filebeat.yml: |
    filebeat.prospectors:
    - type: log
      enabled: true
      paths:
        - /data/logs/nginx/*.log
      ignore_older: 2h
      tail_files: true
    output.kafka:
      hosts: ["vm172-16-16-8.ksc.com:8000", "vm172-16-16-16.ksc.com:8002", "vm172-16-16-19.ksc.com:8004"]
      topic: "kvision-log"
      worker: 3